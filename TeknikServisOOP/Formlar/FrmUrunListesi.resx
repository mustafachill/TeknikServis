<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>