<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnKaydet.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>